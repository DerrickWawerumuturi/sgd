import useContext from './hooks/useContext';

export default function api(impl, resultFactory = createRes) {
  return (context) => {
    return useContext(context, async () => {
      try {
        const result = impl();
        if (result && typeof result.then === 'function') {
          return result.then(
            async (asyncResult) => {
              await context.emit('disposing');
              context.res = resultFactory(asyncResult, null, context);
            },
            async (error) => {
              await context.emit('disposing');
              context.res = resultFactory(null, error, context);
            },
          );
        }
        await context.emit('disposing');
        context.res = resultFactory(result, null, context);
      } catch (error) {
        await context.emit('disposing');
        context.res = resultFactory(null, error, context);
      }
    });
  };
}

function createRes(result, error) {
  return {
    status: 200,
    body: {
      result,
      error: error ? {message: error.message, code: error.code} : null,
    },
  };
}
