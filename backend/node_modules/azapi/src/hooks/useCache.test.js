import useCache from './useCache';
import MemoryCacheStrategy from '../cachingStrategies/MemoryCacheStrategy';

const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

beforeEach(() => {
  MemoryCacheStrategy.reset();
});

test('should read/write cache value without expiration', async () => {
  const [count, setCount, getCount] = useCache('count', 1);
  expect(count).toBe(1);
  await delay(10);
  expect(count).toBe(1);
  setCount(2);
  expect(getCount()).toBe(2);
});

test('should reset cache value after specified ms', async () => {
  const [count, setCount, getCount] = useCache('count', () => ({
    expire: 30,
    value: 1,
  }));
  expect(count).toBe(1);
  await delay(10);
  expect(count).toBe(1);
  setCount(2);
  expect(getCount()).toBe(2);
  await delay(50);
  expect(getCount()).toBe(1);
});
