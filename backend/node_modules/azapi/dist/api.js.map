{"version":3,"sources":["../src/api.js"],"names":["api","impl","resultFactory","createRes","context","result","then","asyncResult","emit","res","error","status","body","message","code"],"mappings":";;;;;;;AAAA;;;;AAEe,SAASA,GAAT,CAAaC,IAAb,EAAmBC,aAAa,GAAGC,SAAnC,EAA8C;AAC3D,SAAQC,OAAD,IAAa;AAClB,WAAO,yBAAWA,OAAX,EAAoB,YAAY;AACrC,UAAI;AACF,cAAMC,MAAM,GAAGJ,IAAI,EAAnB;;AACA,YAAII,MAAM,IAAI,OAAOA,MAAM,CAACC,IAAd,KAAuB,UAArC,EAAiD;AAC/C,iBAAOD,MAAM,CAACC,IAAP,CACL,MAAOC,WAAP,IAAuB;AACrB,kBAAMH,OAAO,CAACI,IAAR,CAAa,WAAb,CAAN;AACAJ,YAAAA,OAAO,CAACK,GAAR,GAAcP,aAAa,CAACK,WAAD,EAAc,IAAd,EAAoBH,OAApB,CAA3B;AACD,WAJI,EAKL,MAAOM,KAAP,IAAiB;AACf,kBAAMN,OAAO,CAACI,IAAR,CAAa,WAAb,CAAN;AACAJ,YAAAA,OAAO,CAACK,GAAR,GAAcP,aAAa,CAAC,IAAD,EAAOQ,KAAP,EAAcN,OAAd,CAA3B;AACD,WARI,CAAP;AAUD;;AACD,cAAMA,OAAO,CAACI,IAAR,CAAa,WAAb,CAAN;AACAJ,QAAAA,OAAO,CAACK,GAAR,GAAcP,aAAa,CAACG,MAAD,EAAS,IAAT,EAAeD,OAAf,CAA3B;AACD,OAhBD,CAgBE,OAAOM,KAAP,EAAc;AACd,cAAMN,OAAO,CAACI,IAAR,CAAa,WAAb,CAAN;AACAJ,QAAAA,OAAO,CAACK,GAAR,GAAcP,aAAa,CAAC,IAAD,EAAOQ,KAAP,EAAcN,OAAd,CAA3B;AACD;AACF,KArBM,CAAP;AAsBD,GAvBD;AAwBD;;AAED,SAASD,SAAT,CAAmBE,MAAnB,EAA2BK,KAA3B,EAAkC;AAChC,SAAO;AACLC,IAAAA,MAAM,EAAE,GADH;AAELC,IAAAA,IAAI,EAAE;AACJP,MAAAA,MADI;AAEJK,MAAAA,KAAK,EAAEA,KAAK,GAAG;AAACG,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAhB;AAAyBC,QAAAA,IAAI,EAAEJ,KAAK,CAACI;AAArC,OAAH,GAAgD;AAFxD;AAFD,GAAP;AAOD","sourcesContent":["import useContext from './hooks/useContext';\n\nexport default function api(impl, resultFactory = createRes) {\n  return (context) => {\n    return useContext(context, async () => {\n      try {\n        const result = impl();\n        if (result && typeof result.then === 'function') {\n          return result.then(\n            async (asyncResult) => {\n              await context.emit('disposing');\n              context.res = resultFactory(asyncResult, null, context);\n            },\n            async (error) => {\n              await context.emit('disposing');\n              context.res = resultFactory(null, error, context);\n            },\n          );\n        }\n        await context.emit('disposing');\n        context.res = resultFactory(result, null, context);\n      } catch (error) {\n        await context.emit('disposing');\n        context.res = resultFactory(null, error, context);\n      }\n    });\n  };\n}\n\nfunction createRes(result, error) {\n  return {\n    status: 200,\n    body: {\n      result,\n      error: error ? {message: error.message, code: error.code} : null,\n    },\n  };\n}\n"],"file":"api.js"}