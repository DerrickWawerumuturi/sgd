{"version":3,"sources":["../../src/hooks/useContext.js"],"names":["useContextScope","useContext","context","func","arguments","length","applyInterface","__appliedInterface","on","Object","assign","name","handler","handlers","Set","add","delete","emit","params","Array","from","reduce","prev","then","finally","dispose","UNSAFE_createContext","req","res","props"],"mappings":";;;;;;;;;AAAA;;;;AAEA,MAAMA,eAAe,GAAG,qBAAO,MAAM,IAAb,CAAxB;;AAEe,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,IAA7B,EAAmC;AAChD,MAAI,CAACC,SAAS,CAACC,MAAf,EAAuB;AACrB,WAAOL,eAAe,EAAtB;AACD;;AACDM,EAAAA,cAAc,CAACJ,OAAD,CAAd;AACA,SAAOF,eAAe,CAACE,OAAD,EAAUC,IAAV,CAAtB;AACD;;AAEM,SAASG,cAAT,CAAwBJ,OAAxB,EAAiC;AACtC,MAAIA,OAAO,CAACK,kBAAZ,EAAgC;AAC9B,WAAOL,OAAP;AACD;;AACDA,EAAAA,OAAO,CAACK,kBAAR,GAA6B,IAA7B;AAEA,QAAMC,EAAE,GAAG,EAAX;AAEAC,EAAAA,MAAM,CAACC,MAAP,CAAcR,OAAd,EAAuB;AACrBM,IAAAA,EAAE,CAACG,IAAD,EAAOC,OAAP,EAAgB;AAChB,UAAIC,QAAQ,GAAGL,EAAE,CAACG,IAAD,CAAjB;;AACA,UAAI,CAACE,QAAL,EAAe;AACbL,QAAAA,EAAE,CAACG,IAAD,CAAF,GAAWE,QAAQ,GAAG,IAAIC,GAAJ,EAAtB;AACD;;AACDD,MAAAA,QAAQ,CAACE,GAAT,CAAaH,OAAb;AACA,aAAO,MAAMC,QAAQ,CAACG,MAAT,CAAgBJ,OAAhB,CAAb;AACD,KARoB;;AASrBK,IAAAA,IAAI,CAACN,IAAD,EAAOO,MAAM,GAAGhB,OAAhB,EAAyB;AAC3B,YAAMW,QAAQ,GAAGL,EAAE,CAACG,IAAD,CAAnB;;AAEA,UAAI,CAACE,QAAL,EAAe;AACb;AACD;;AAED,aAAOM,KAAK,CAACC,IAAN,CAAWP,QAAX,EAAqBQ,MAArB,CAA4B,CAACC,IAAD,EAAOV,OAAP,KAAmB;AACpD,YAAIU,IAAI,IAAI,OAAOA,IAAI,CAACC,IAAZ,KAAqB,UAAjC,EAA6C;AAC3C,iBAAOD,IAAI,CAACE,OAAL,CAAa,MAAM;AACxB,mBAAOZ,OAAO,CAACM,MAAD,CAAd;AACD,WAFM,CAAP;AAGD,SAJD,MAIO;AACL,iBAAON,OAAO,CAACM,MAAD,CAAd;AACD;AACF,OARM,EAQJ,IARI,CAAP;AASD,KAzBoB;;AA0BrBO,IAAAA,OAAO,GAAG;AACRvB,MAAAA,OAAO,CAACe,IAAR,CAAa,WAAb;AACD;;AA5BoB,GAAvB;AA+BA,SAAOf,OAAP;AACD;;AAEM,SAASwB,oBAAT,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,KAAxC,EAA+C;AACpD,SAAOvB,cAAc,CAAC;AACpBqB,IAAAA,GADoB;AAEpBC,IAAAA,GAFoB;AAGpB,OAAGC;AAHiB,GAAD,CAArB;AAKD","sourcesContent":["import iscope from 'iscope';\n\nconst useContextScope = iscope(() => null);\n\nexport default function useContext(context, func) {\n  if (!arguments.length) {\n    return useContextScope();\n  }\n  applyInterface(context);\n  return useContextScope(context, func);\n}\n\nexport function applyInterface(context) {\n  if (context.__appliedInterface) {\n    return context;\n  }\n  context.__appliedInterface = true;\n\n  const on = {};\n\n  Object.assign(context, {\n    on(name, handler) {\n      let handlers = on[name];\n      if (!handlers) {\n        on[name] = handlers = new Set();\n      }\n      handlers.add(handler);\n      return () => handlers.delete(handler);\n    },\n    emit(name, params = context) {\n      const handlers = on[name];\n\n      if (!handlers) {\n        return;\n      }\n\n      return Array.from(handlers).reduce((prev, handler) => {\n        if (prev && typeof prev.then === 'function') {\n          return prev.finally(() => {\n            return handler(params);\n          });\n        } else {\n          return handler(params);\n        }\n      }, null);\n    },\n    dispose() {\n      context.emit('disposing');\n    },\n  });\n\n  return context;\n}\n\nexport function UNSAFE_createContext(req, res, props) {\n  return applyInterface({\n    req,\n    res,\n    ...props,\n  });\n}\n"],"file":"useContext.js"}